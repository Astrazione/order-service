
services:
  postgres:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - order-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka_broker
    ports:
      - "9092:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093,CONTROLLER://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9094
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - order-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
      build: .
      container_name: order_service
      environment:
        - DB_CONN_STR=postgres://postgres:postgres@postgres:5432/order_db?sslmode=disable
        - KAFKA_BROKERS=kafka:9092
        - KAFKA_TOPIC=orders
      ports:
        - "8080:8080"
      depends_on:
        postgres:
          condition: service_healthy
        kafka:
          condition: service_healthy
      networks:
        - order-network
      restart: unless-stopped

volumes:
  postgres_data:
  kafka_data:

networks:
  order-network:
    driver: bridge